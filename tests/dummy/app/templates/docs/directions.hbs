<div class="row">
  <div class="col-md-7 order-2 order-md-1">
    <section>
      <h5>Fetching directions</h5>

      <p>The <tt>directions</tt> component can be used to fetch directions between locations. This is a convenience wrapper for <GoogleDocs @section="directions#DirectionsService">DirectionsService</GoogleDocs>. The component fetches the service from the addon’s <tt>googleMapsApi</tt> service and makes a request. The resulting directions are yielded as <tt>directions</tt>.</p>

      <p>You must provide at least 3 of the <GoogleDocs @section="directions#DirectionsRequest">DirectionsRequest</GoogleDocs> options: <tt>origin</tt>, <tt>destination</tt>, and <tt>travelMode</tt>.</p>

      <CodeSnippet @name="basic-directions.hbs" />

      <p>For convenience, you can provide an <tt>onDirectionsChanged</tt> action, which will be called when the directions are updated. This is a custom event provided by the addon, similar to the native event on the <GoogleDocs @section="directions#DirectionsRenderer">DirectionsRenderer</GoogleDocs>.</p>
    </section>
    <section>
      <h5>Adding waypoints</h5>

      <p>The <tt>directions</tt> component yields a simple <tt>waypoint</tt> component that accepts a <tt>location</tt> and an optional <tt>stopover</tt> attribute. You also provide the <tt>waypoints</tt> as an option to <tt>directions</tt>.</p>

      <CodeSnippet @name="basic-waypoint.hbs" />
    </section>
    <section>
      <h5>Displaying routes</h5>

      <p>You may have noticed that the the <tt>directions</tt> component doesn’t actually display the route on the map. This is deliberate. The results returned by the <tt>DirectionsService</tt> are complex and you may not want to display the first route by default.</p>

      <p>To actually display routes, the <tt>directions</tt> component yields a <tt>route</tt> component, which uses the <GoogleDocs @section="directions#DirectionsRenderer">DirectionsRenderer</GoogleDocs> under the hood to display directions results.</p>

      <CodeSnippet @name="basic-routes.hbs" />
    </section>
    <section>
      <h5>Complex routing</h5>

      <p>Let’s recreate one of the more complex examples from <GoogleDocs @section="directions-complex" @type="examples">Complex directions example</GoogleDocs>. We want to walk from Covent Garden to Clerkenwell. We’re going to fetch the route and display markers along the route for each step of the route. Each marker has an <tt><LinkTo @route="docs.info-windows">infoWindow</LinkTo></tt> attached to it that displays the instructions for the specific step. You know what? Let’s also add a waypoint to pass by Leather Lane and grab some coffee from the Department of Coffee and Social Affairs!</p>

      <CodeSnippet @name="complex-routes.hbs" />

      <p>If you’re doing complex routing like in the example above, you might find that manipulating the directions object in Handlebars can be a bit of a pain. In this case, I would suggest creating your own helpers. Here we’ve defined a <tt>get-route-steps</tt> helper that extracts the route steps.</p>

      <CodeSnippet @name="get-route-steps.js" />
    </section>

    <p>{{this.nextPage.text}}</p>
    {{link-to-next this.nextPage}}
  </div>
  <div class="col-md-5 order-1 order-md-2 sticky-top sticky-map">
    <GMap
      @lat={{this.london.lat}}
      @lng={{this.london.lng}}
      @zoom={{12}}
      @styles={{this.primaryMapStyle}}
      class="ember-google-map-responsive" as |g|>

      <g.directions
        @origin="Covent Garden"
        @destination="Clerkenwell"
        @travelMode="WALKING" as |d|>

        <d.waypoint @location="Leather Lane Department of Coffee and Social Affairs" />

        <d.route
          @polylineOptions={{hash
            strokeColor="green"
            strokeWeight=8
            strokeOpacity=0.7}} as |r|>

          {{#each (get-route-steps r.directions) as |s|}}
            <g.marker
              @position={{s.start_location}}
              @onClick={{action (toggle "showInstructions" s)}} as |m|>
              <m.infoWindow
                @content={{s.instructions}}
                @isOpen={{s.showInstructions}} />
            </g.marker>
          {{/each}}
        </d.route>
      </g.directions>
    </GMap>
  </div>
</div>